---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

const imgs = [
	{
		path: "giant",
		name: "Giant",
		width: 1
	},
	{
		path: "balloon",
		name: "Escape",
		width: 1
	},
	{
		path: "desert",
		name: "Alice Abandoned",
		width: 1
	},
	{
		path: "alice",
		name: "Alice Redesign",
		width: 1
	},
	
	{
		path: "siftgun",
		name: "Sift",
		width: 1
	}
]
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />

		<div class="ptop"></div>
		<div class="parallax-viewport">
			<div class="parallax-layer">
			</div>
				<h3>View my work below</h1>
				<p>click on any image for details</p>
			</div>
		<div class="pbot"></div>

		<div class="gallery">
			{imgs.map((img) => (
				<div class="stretchy-bg" style={{
					backgroundImage: `url(/illustration/${img.path}.jpg)`,
					flexGrow: `${img.width}`
					}}>
					<div class="stretchy-container">
						<h3 class="stretchy-text">{img.name}</h3>
					</div>
				</div>
			))}
		</div>

		<Footer />
	</body>
</html>

<style>


.gallery {
	display: flex;
	margin: 100px auto 80px auto;
	column-gap: 10px;
	row-gap: 10px;
	width: 90%;
	justify-content: center;
	align-items: center;
	align-content: stretch;
	flex-wrap: wrap;
}
.stretchy-bg {
	height: 50vh;
	margin: 0;
	padding: 0;
	border-radius: 2px;
	flex-grow: 1;
	flex-shrink: 0;
	flex-basis: 18%;
	min-width: 0;
	transition: 600ms;

	background-size: cover;
	background-position: center;
}

@media (max-width: 1080px) {
.stretchy-bg {
	flex-basis: 40%;
	height: 40vh;
}} @media (max-width: 720px) {
.stretchy-bg {
	flex-basis: 100%;
	height: 30vh;
}}

.stretchy-bg:hover {
	flex-grow: 3 !important;
	/* border-radius: 20px;
	height: 48vh;
	margin: 0px 20px 0px 20px; */
}
.stretchy-container {
	width: 100%;
	height: 100%;
	/* background-color: rgba(255,255,255,0); */
	opacity: 0;
	background: linear-gradient(
		to top,
		rgba(255, 255, 255, 0.783),
		rgba(255, 255, 255, 0) 100%
		);
	transition: 350ms;
	
	display: flex;
	justify-content: flex-start;
	align-items: flex-end;
}
.stretchy-text {
	color: rgba(56, 56, 56, 0.836);
	transition: 150ms;
	text-align: center;
	white-space: nowrap;
	opacity: 0;
	transition: 250ms;

	margin: 0px 0px 20px 30px;
}
.stretchy-container:hover {
	/* background-color: rgba(255, 255, 255, 0.718); */
	opacity: 1;
}
.stretchy-container:hover .stretchy-text {
	opacity: 1;
}

/* -------------------- PARALLAX -------------------- */

/* covers */
.ptop, .pbot {
	width: 100%;
	background-color: white;
	position: absolute;
	z-index: -1
}
.ptop {
	top: 0;
	height: 120px;
}
.pbot {
	top: 50vh;
	height: 100%;
}

/* viewport */
.parallax-viewport {
	display: flex;
  height: 44vh;
  z-index: 0;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

/* text */
.parallax-viewport h3, .parallax-viewport p {
	color: white;
	margin: 0;
	padding: 0;
	animation: parallaxScrollSlow linear forwards;
  animation-timeline: scroll();
	z-index: -2;
}
@keyframes parallaxScrollSlow {
	80% {
		opacity: 0;
	}
  to {
    transform: translateY(300px);
		opacity: 0;
  }
}
.parallax-viewport p {
	font-size: 24px;
}

/* image */
.parallax-layer {
  height: 50vh;
	width: 100%;
  background-image: url('/illustration/forest.png');
  background-size: cover;
  background-position: center;
  position: absolute;
  top: 60px;
  animation: parallaxScroll linear forwards;
  animation-timeline: scroll();
  z-index: -2;
}
@keyframes parallaxScroll {
  to {
    transform: translateY(400px);
  }
}

</style>