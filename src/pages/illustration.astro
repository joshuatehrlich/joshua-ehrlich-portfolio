---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import Comics from './comics.astro';

import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

import '../styles/illustration.scss';
// import { makeIssue, undefined } from 'astro:schema';


// SETUP IMAGE IMPORTS
const categories = ["path", "name", "details", "width", "vpos", "height"] as const;

const imgDataIllust = [
  ["giant", "Giant", "40 by 60 inches, copic on illustration board. Winner of Silver award in Illustration West 63.<br>2024", 3, "20%"],
  
	// ["alice", "Alice Redesign", 'A redesign of Alice in Wonderland, in response to the theme "Alice in Space."<br>2024'],
	["desert", "Alice Abandoned",
		"An exploration of an Alice in Wonderland redesign, set on an alien planet. Created in photoshop.<br>2024"
	, 2.5, "60%"],
	[null],[null],

	

	["camp", "Camp", "Created in Photoshop<br>2024", 2],
	["carride", "The Move", "Created in Photoshop<br>2024", 3],
	["balloon", "Escape", "Created in photoshop.<br>2024", 1.3],
	[null],

	

	// ["siftmask", "Sift Concept", 'Character concept for a top-down action project called "Sift".<br>2023'],
	["eye", "Untitled", "Created in Photoshop<br>2024", 2],
	["siftgun", "Sift Concept", 'Character concept for a top-down action project called "Sift".<br>2023', 3, "0%"],
	[null],[null],

	// ["exile1b", "Exile Part One", "12 by 18 inches, ink and digital coloring.<br>2024", 2, undefined, "20vw"],
	// ["exile1", "Exile Part One", "12 by 18 inches, ink and digital coloring.<br>2024", 4, undefined, "20vw"],
	
	// ["exile2", "Exile Part Two", "12 by 18 inches, ink and digital coloring.<br>2024", 4, undefined, "20vw"],
	// ["exile2b", "Exile Part Two", "12 by 18 inches, ink and digital coloring.<br>2024", 2],
	// [null],

	
	["tower", "Tower", "24 by 11 inches, graphite on Strathmore 400 paper.<br>2023", 1.5, undefined, "30vw"],
	["cookingathome", "Cooking at Home", "18 by 24 inches, graphite on Strathmore 400 paper.<br>2023", 3.9, undefined, "30vw"],
	// ["exile1", "Exile Part One", "12 by 18 inches, ink and digital coloring.<br>2024", 3],
	["earthenconcept/snake", "Earthen Concept", '...', 1.8, undefined, "30vw"],
	// ["race", "Kick", "18 by 24 inches, graphite on Strathmore 400 paper.<br>2023", 3],
	[null],

	

	// ["knightcomic", "Knight Comic", "A wordless story. Created in Photoshop.<br>2023", 2],
	["nomad", "Nomad", "Created in Photoshop<br>2022", 3],
	["clouds", "Pilgrimage", "Digital landscape painting inspired by Krenz Cushart<br>2022", 2],
	
	[null],[null],
	
	// ["kaiju", "Kaiju", "40 by 60 inches, copic on illustration board.<br>2024", 4, undefined, "30vw"],
	// ["dive", "Dive", "Meditation in ink<br>2024", 2, undefined, "30vw"],
	// [null],[null],
	

	// ["bread/2", "Screenshot from Bread", '"Bread" is a short film I created in Freshman year. <a href="https://www.youtube.com/watch?v=K-TRRPV8mhc" target="_blank">Watch it here!</a><br>2023', 1.5],
	// ["bread/3", "Screenshot from Bread", '"Bread" is a short film I created in Freshman year. <a href="https://www.youtube.com/watch?v=K-TRRPV8mhc" target="_blank">Watch it here!</a><br>2023', 1],
	// // ["bread/1", "Screenshot from Bread", '"Bread" is a short film I created in Freshman year. <a href="https://www.youtube.com/watch?v=K-TRRPV8mhc" target="_blank">Watch it here!</a><br>2023', 1.5],
	// ["bread/4", "Screenshot from Bread", '"Bread" is a short film I created in Freshman year. <a href="https://www.youtube.com/watch?v=K-TRRPV8mhc" target="_blank">Watch it here!</a><br>2023', 1.5],
	// [null],
	
	["earthenconcept/sky", "Concept for Earthen", "...", 2.9, undefined, "27vw"],
	["earthenconcept/house", "Concept for Earthen", "...", 4, undefined, "27vw"],
	[null],[null],

	["earthenconcept/pad-concept", "Concept for Earthen", "...", 3],
	
	["earthenconcept/bnw-puzzle", "Concept for Earthen", "...", 3],
	["earthenconcept/roma", "Concept for Earthen", "...", 3],
	[null],
];

const imgDataCharacter = [
  ["character/alice-final", "Name", "...", 1, '30%'],
	["character/alice-concept-1", "Name", "...", 2],
	[null],[null],

	["character/alice-concept-2", "Name", "...", 2],
	["character/alice-concept-3", "Name", "...", 2],
	[null],[null],

	["character/sift-mask", "Name", "...", 1.3],
	["character/sift-concept", "Name", "...",2],
	[null],[null],


	["earthenconcept/character", "Name", "...", 2],
	["earthenconcept/ladder", "Name", "...", 1.2],
	
	
];

const imgDataAcademic = [
	["academic/hands", "Graphite Hand Study", "", 1.3],
	["academic/tree", "Sketch", "", 1],
	["academic/torso", "Charcoal Figure Study", "", 1.5],
	[null],

  ["academic/jonathan", "Oil Portrait", "", 1],
	["academic/asaro", "Oil Asaro Study", "", 1.5],
	["academic/schmidstudy", "Richard Schmidt Study", "Created in Photoshop<br>2022", 1],
	
	// ["academic/selfportrait", "Name", "",1],
	[null],
	

	// ["academic/coffee", "Name", "", 1],
	["academic/box", "Charcoal Study", "", 1.5],
	
	["academic/desk", "My Desk", "", 1],
	["academic/shoe", "Still Life", "", 2],
	[null],

	["academic/portrait4", "Portrait Study", "", 1],
	["academic/portrait1", "Portrait Study", "", 1 ],
	["academic/portrait3", "Portrait Study", "", 1],
	// ["academic/portrait5", "Name", "", 2],
	["academic/portrait2", "Portrait Study", "", 1],

	["figure/1", "Figure Study", "", 1],
	["figure/2", "Figure Study", "", 2],
	["figure/3", "Figure Study", "", 1],
	["figure/4", "Figure Study", "", 1.5],

	["figure/5", "Figure Study", "", 1.5],
	["figure/6", "Figure Study", "", 1],
	["figure/7", "Figure Study", "", 2],
	["figure/8", "Figure Study", "", 1],

	["figure/9", "Figure Study", "", 1],
	["figure/11", "Figure Study", "", 2],
	["figure/10", "Figure Study", "", 1],
	["figure/14", "Figure Study", "", 1.5],

	

	
	["academic/bnw1", "Digital Portrait Study", "", 1],
	["academic/rock", "Digital Still Life", "", 1.5],
	["academic/asarodigital", "Digital Still Life", "", 1],
	[null],
	

	["academic/room", "Digital Environment Painting", "", 1],
	["academic/sf", "Digital Environment Painting", "", 1],
	[null],[null],

	["academic/still3", "Oil Still Life", "", 1],
	["academic/still2", "Oil Still Life", "", 2],
	
	["academic/still1", "Oil Still Life", "", 1],
	[null],

	["washingmachine", "Oil Still Life", "", 3],
	["academic/coffee", "Oil Still Life", "", 3],
	[null],
	[null],

	["dportrait1", "Digital Portrait", "Created in Photoshop<br>2022", 1],
	["dportrait2", "Digital Portrait", "Created in Photoshop<br>2022", 1.5],
	["dportrait3", "Digital Portrait", "Created in Photoshop<br>2022", 1, '40%'],
	[null],
];

const imgDataSketchbook = [
	["sketchbook/1a", "Giant Sketch", "", 1, undefined, "25vw"],
	["sketchbook/1b", "Kaiju Sketch", "", 1, undefined, "25vw"],
	[null],[null],

	["sketchbook/2a", "Digital Sketch 2024", "", 1],
	["sketchbook/2b", "Digital Sketch 2024", "", 1],
	["sketchbook/2c", "Digital Sketch 2024", "", 1],
	[null],

	["sketchbook/3a", "Digital Sketch 2024", "", 1],
	["sketchbook/3c", "Digital Sketch 2024", "", 1],
	["sketchbook/3b", "Digital Sketch 2024", "", 1],
	[null],

	["sketchbook/1", "Sketchbook 2023", "", 1],
	["sketchbook/2", "Sketchbook 2023", "", 1],
	["sketchbook/4", "Sketchbook 2023", "", 1],
	["sketchbook/5", "Sketchbook 2023", "", 1],

	["sketchbook/6", "Sketchbook 2023", "", 1],
	["sketchbook/7", "Sketchbook 2023", "", 1],
	["sketchbook/8", "Sketchbook 2023", "", 1],
	["sketchbook/9", "Sketchbook 2023", "", 1],

	["sketchbook/10", "Sketchbook 2023", "", 1],
	["sketchbook/11", "Sketchbook 2023", "", 1],
	["sketchbook/12", "Sketchbook 2023", "", 1],
	["sketchbook/13", "Sketchbook 2023", "", 1],

	["sketchbook/14", "Sketchbook 2023", "", 1],
	["sketchbook/15", "Sketchbook 2023", "", 1],
	["sketchbook/16", "Sketchbook 2023", "", 1],
	["sketchbook/17", "Sketchbook 2023", "", 1],

	["sketchbook/b1", "Perspective Study", "", 1],
	["sketchbook/b2", "Perspective Study", "", 1],
	["sketchbook/b3", "Perspective Study", "", 1],
	[null],
	["sketchbook/bp1", "Perspective Study", "", 1],
	["sketchbook/bp2", "Perspective Study", "", 1],
	["sketchbook/bp3", "Perspective Study", "", 1],
	[null],
	["sketchbook/p1", "Perspective Study", "", 1],
	["sketchbook/p2", "Perspective Study", "", 1],
	["sketchbook/p3", "Perspective Study", "", 1],
	[null],
];

type Image = {
  path: string;
  name: string;
  details: string;
  width: number;
  vpos: string;
	height: string;
};

const defaultWidth = 1;  // Default width
const defaultVPos = "50%"; // Default vertical position

const imgsIllust: Image[] = imgDataIllust.map(data => {
  const image = {
    path: data[0] as string,
    name: data[1] as string,
    details: data[2] as string, // Details provided in imgData
    width: (data[3] !== undefined ? data[3] : defaultWidth) as number,
    vpos: (data[4] !== undefined ? data[4] : defaultVPos) as string,
		height: (data[5] !== undefined ? data[5] : "25vw") as string,
  } as Image;

  return image;
});

const imgsCharacter: Image[] = imgDataCharacter.map(data => {
  const image = {
    path: data[0] as string,
    name: data[1] as string,
    details: data[2] as string, // Details provided in imgData
    width: (data[3] !== undefined ? data[3] : defaultWidth) as number,
    vpos: (data[4] !== undefined ? data[4] : defaultVPos) as string,
		height: (data[5] !== undefined ? data[5] : "20vw") as string,
  } as Image;

  return image;
});

const imgsAcademic: Image[] = imgDataAcademic.map(data => {
  const image = {
    path: data[0] as string,
    name: data[1] as string,
    details: data[2] as string, // Details provided in imgData
    width: (data[3] !== undefined ? data[3] : defaultWidth) as number,
    vpos: (data[4] !== undefined ? data[4] : defaultVPos) as string,
		height: (data[5] !== undefined ? data[5] : "20vw") as string,
  } as Image;

  return image;
});

const imgsSketchbook: Image[] = imgDataSketchbook.map(data => {
  const image = {
    path: data[0] as string,
    name: data[1] as string,
    details: data[2] as string, // Details provided in imgData
    width: (data[3] !== undefined ? data[3] : defaultWidth) as number,
    vpos: (data[4] !== undefined ? data[4] : defaultVPos) as string,
		height: (data[5] !== undefined ? data[5] : "20vw") as string,
  } as Image;

  return image;
});

let category = 'illustration'; // your category value
const isIllustration = category === 'illustration';
const isCharacter = category === 'character';
const isAcademic = category === 'academic';
const isSketchbook = category === 'sketchbook';
const isComic = category === 'comics';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>

		<!-- JAVASCRIPT ZONE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

		<!-- Handles Animations -->
		<script src="../components/animation/AnimIllustration.js"></script>

		<script client:load> // for some reason, this is read as typescript unless i use client:load

		// FOR SOME REASON SETTING THE COMICS TO DISPLAY NONE FM THE START FUCKS UP{ THE CAROUSELS
		window.onload = function() {
			category = '{category}'
			if (category != "comics") {
				document.getElementById('comics').style.display = 'none';
			};
    };

			function openPopup(imageSrc, imageTitle, imageDesc) {
				document.getElementById('popup').style.display = 'flex';

				document.getElementById('popup-image').src = imageSrc;
				document.getElementById('popup-title').innerHTML = imageTitle;
				document.getElementById('popup-desc').innerHTML = imageDesc;
				if (imageDesc == "" || imageDesc == "...") {
					document.getElementById('popup-text').style.display = 'none';
				} else { document.getElementById('popup-text').style.display = 'flex'; }
			}

			function closePopup() {
				document.getElementById('popup').style.display = 'none';
			}

			

			function setCategory(ctg) {
				category = ctg;

				const selectorDivs = document.querySelectorAll('.selector');
				
				selectorDivs.forEach(div => {
					div.classList.remove('active');
				});
				
				const categoryDiv = document.querySelector(`.${category}`);
				if (categoryDiv && !categoryDiv.classList.contains('active')) {
					categoryDiv.classList.add('active');
				}

				// Get all elements with the class 'gallery'
				const galleryElements = document.querySelectorAll('.gallery-group');
				
				// Hide all gallery elements and show only the one with the passed in category class
				galleryElements.forEach(element => {
					if (element.classList.contains(category)) {
						element.style.display = 'flex';
					} else {
						element.style.display = 'none';
					}
				});


			}
			






		</script>



		<!-- HTML BEGINS HERE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

		<div class="invert-colors"><Header class="header"/></div>
		<div class="spacer"></div>

		<div class="parallax-viewport">
			<div class="parallax-content">
				<h3>Art and Design</h3>
				<p>click on any image for details</p>
			</div>
		</div>

		<div onclick="closePopup()" id="popup" class="popup">
			<span class="close-btn" onclick="closePopup()">&times;</span>
			<div class="popup-flexbox">
				
				<img id="popup-image" src="/illustration/siftmask.jpg">
				<div class="popup-text" id="popup-text">
					<h1 id="popup-title">Name</h1>
					<p id="popup-desc">Desc</p>
				</div>
			</div>
		</div>

		<div class="category-selector">
			<div class=`selector illustration ${isIllustration ? 'active' : ''}` onclick=`setCategory('illustration')`>
				<p>
					Concept Art
				</p>
			</div>

			<div class=`selector character ${isCharacter ? 'active' : ''}` onclick=`setCategory('character')`>
				<p>
					Character
				</p>
			</div>

			<div class=`selector sketchbook ${isSketchbook ? 'active' : ''}` onclick=`setCategory('sketchbook')`>
				<p>
					Sketchbook
				</p>
			</div>

			<div class=`selector academic ${isAcademic ? 'active' : ''}` onclick=`setCategory('academic')`>
				<p>
					Studies
				</p>
			</div>
			
			<!-- <div class=`selector comics ${isComic ? 'active' : ''}` onclick=`setCategory('comics')`>
				<p>
					Comics
				</p>
			</div> -->
		</div>

		

		<div class="gallery-group illustration">
			{imgsIllust.reduce((acc, img, index) => {
				acc = acc as {}[][];
				
				// Start a new flexbox for every 4 images
				if (index % 4 === 0 || img.path === null) {
					acc.push([]);
				}
				acc[acc.length - 1].push(img);
				return acc;
			}, [] as {}[][])
			.map((imgGroup, groupIndex) => ( imgGroup.length > 1 && (
				<div class="gallery illustration">
					{imgGroup.map((img, imgIndex) => (
						<div class="gallery-img illustration"
						onclick=`openPopup('/illustration/${img.path}-full.jpg', '${img.name}', '${img.details}')`,
						style={{
							backgroundImage: `url(/illustration/${img.path}-lowres.jpg)`,
							'--flex-grow': `${img.width}`,
							backgroundPosition: `50% ${img.vpos}`,
							height: `${img.height}`
						}}>
							<div class="gallery-content-container illustration">
								<h3 class="gallery-content">{img.name}</h3>
							</div>
						</div>
					))}
				</div>
			)))}
		</div>

		<div class="gallery-group character">
			{imgsCharacter.reduce((acc, img, index) => {
				acc = acc as {}[][];
				
				// Start a new flexbox for every 4 images
				if (index % 4 === 0 || img.path === null) {
					acc.push([]);
				}
				acc[acc.length - 1].push(img);
				return acc;
			}, [] as {}[][])
			.map((imgGroup, groupIndex) => ( imgGroup.some(img => img.path !== null)
			&& (
				<div class="gallery character">
					{imgGroup.map((img, imgIndex) => (
						<div class="gallery-img character"
						onclick=`openPopup('/illustration/${img.path}-full.jpg', '${img.name}', '${img.details}')`,
						style={{
							backgroundImage: `url(/illustration/${img.path}-lowres.jpg)`,
							'--flex-grow': `${img.width}`,
							backgroundPosition: `50% ${img.vpos}`,
							height: `${img.height}`
						}}>
							<div class="gallery-content-container character">
								<h3 class="gallery-content">{img.name}</h3>
							</div>
						</div>
					))}
				</div>
			)))}
		</div>
		

		<div class="gallery-group academic">
			{imgsAcademic.reduce((acc, img, index) => {
				acc = acc as {}[][];
				
				// Start a new flexbox for every 4 images
				if (index % 4 === 0 || img.path === null) {
					acc.push([]);
				}
				acc[acc.length - 1].push(img);
				return acc;
			}, [] as {}[][])
			.map((imgGroup, groupIndex) => ( imgGroup.length > 1 && (
				<div class="gallery academic">
					{imgGroup.map((img, imgIndex) => (
						<div class="gallery-img academic"
						onclick=`openPopup('/illustration/${img.path}-full.jpg', '${img.name}', '${img.details}')`,
						style={{
							backgroundImage: `url(/illustration/${img.path}-lowres.jpg)`,
							'--flex-grow': `${img.width}`,
							backgroundPosition: `50% ${img.vpos}`,
							height: `${img.height}`
						}}>
							<div class="gallery-content-container academic">
								<h3 class="gallery-content">{img.name}</h3>
							</div>
						</div>
					))}
				</div>
			)))}
		</div>

		<div class="gallery-group sketchbook">
			{imgsSketchbook.reduce((acc, img, index) => {
				acc = acc as {}[][];
				
				// Start a new flexbox for every 4 images
				if (index % 4 === 0 || img.path === null) {
					acc.push([]);
				}
				acc[acc.length - 1].push(img);
				return acc;
			}, [] as {}[][])
			.map((imgGroup, groupIndex) => ( imgGroup.length > 1 && (
				<div class="gallery sketchbook">
					{imgGroup.map((img, imgIndex) => (
						<div class="gallery-img sketchbook"
						onclick=`openPopup('/illustration/${img.path}-full.jpg', '${img.name}', '${img.details}')`,
						style={{
							backgroundImage: `url(/illustration/${img.path}-lowres.jpg)`,
							'--flex-grow': `${img.width}`,
							backgroundPosition: `50% ${img.vpos}`,
							height: `${img.height}`
						}}>
							<div class="gallery-content-container sketchbook">
								<h3 class="gallery-content">{img.name}</h3>
							</div>
						</div>
					))}
				</div>
			)))}
		</div>

		<div class="gallery-group comics" id="comics">
			<Comics />
		</div>

		<!-- <div class="foot-div flex flex-1 flex-col justify-start items-center w-100% mt-12 mb-20">
			<img src="/illustration/treefull.jpg" class="foot-image mb-1 w-1/2 object-contain" style="max-height: 50vh">
			<h4 class="foot-text mw-1/4">Thanks for stopping by!</h4>
		</div> -->

		<Footer />
	</body>
</html>