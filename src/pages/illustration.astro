---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

import '../styles/illustration.scss';

import CardDemo from '../components/ui/card-demo.tsx';
import { undefined } from 'astro:schema';


// SETUP IMAGE IMPORTS
const categories = ["path", "name", "details", "width", "vpos", "height"] as const;

const imgData = [
  ["giant", "Giant", "40 by 60 inches, copic on illustration board.<br>2024", 3],
	["balloon", "Escape", "Created in photoshop.<br>2024"],
  ["desert", "Alice Abandoned",
		"An exploration of an Alice in Wonderland redesign, set on an alien planet. Created in photoshop.<br>2024"
	, 2, "60%"],
	["alice", "Alice Redesign", 'A redesign of Alice in Wonderland, in response to the theme "Alice in Space."'],

	["siftmask", "Sift Concept", 'Character concept for a top-down action project called "Sift".'],
	["siftgun", "Sift Concept", 'Character concept for a top-down action project called "Sift".', 3, "0%"],
	["eye", "Untitled", "...", 2],[null],

	["camp", "Camp", "...", 3],
	["carride", "The Move", "...", 3],[null],[null],

	["kaiju", "Kaiju", "...", 4],
	["dive", "Dive", "...", 2],
	[null],[null],

	["knightcomic", "Knight Comic", "...", 1.3],
	["cookingathome", "Cooking at Home", "...", 3],
	["washingmachine", "Life Study", "...", 2],
	["alpha", "Anthro Alphabet", "...", 1],
];

type Image = {
  path: string;
  name: string;
  details: string;
  width: number;
  vpos: string;
	height: string;
};

const defaultWidth = 1;  // Default width
const defaultVPos = "50%"; // Default vertical position

const imgs: Image[] = imgData.map(data => {
  const image = {
    path: data[0] as string,
    name: data[1] as string,
    details: data[2] as string, // Details provided in imgData
    width: (data[3] !== undefined ? data[3] : defaultWidth) as number,
    vpos: (data[4] !== undefined ? data[4] : defaultVPos) as string,
		height: (data[5] !== undefined ? data[5] : "20vw") as string,
  } as Image;

  return image;
});
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header class="header"/>

		<!-- Handles Animations -->
		<script src="../components/animation/AnimIllustration.js"></script>

		<!-- handles popups -->
		<script client:load> // for some reason, this is read as typescript unless i use client:load

			function openPopup(imageSrc, imageTitle, imageDesc) {
				document.getElementById('popup').style.display = 'flex';
				
				// gsap.to(".popup", {
				// 	opacity: 1,
				// 	duration: 1
				// });

				document.getElementById('popup-image').src = imageSrc;
				document.getElementById('popup-title').innerHTML = imageTitle;
				document.getElementById('popup-desc').innerHTML = imageDesc;
				if (imageDesc == "" || imageDesc == "...") {
					document.getElementById('popup-text').style.display = 'none';
				} else { document.getElementById('popup-text').style.display = 'flex'; }
			}

			function closePopup() {
				document.getElementById('popup').style.display = 'none';
			}
		</script>

		<div class="parallax-viewport">
			<div class="parallax-content">
				<h3>View my work below</h1>
				<p>click on any image for details</p>
			</div>
		</div>

		<div id="popup" class="popup">
			<span class="close-btn" onclick="closePopup()">&times;</span>
			<div class="popup-flexbox">
				
				<img id="popup-image" src="/illustration/siftmask.jpg">
				<div class="popup-text" id="popup-text">
					<h1 id="popup-title">Name</h1>
					<p id="popup-desc">Desc</p>
				</div>
			</div>
		</div>


		<div class="gallery-group">
			{imgs.reduce((acc, img, index) => {
				acc = acc as {}[][];
				
				// Start a new flexbox for every 4 images
				if (index % 4 === 0 || img.path === null) {
					acc.push([]);
				}
				acc[acc.length - 1].push(img);
				return acc;
			}, [] as {}[][])
			.map((imgGroup, groupIndex) => ( imgGroup.length > 1 && (
				<div class="gallery">
					{imgGroup.map((img, imgIndex) => (
						<div class="gallery-img"
						onclick=`openPopup('/illustration/${img.path}.jpg', '${img.name}', '${img.details}')`,
						style={{
							backgroundImage: `url(/illustration/${img.path}.jpg)`,
							'--flex-grow': `${img.width}`,
							backgroundPosition: `50% ${img.vpos}`,
							height: `${img.height}`
						}}>
							<div class="gallery-content-container">
								<h3 class="gallery-content">{img.name}</h3>
							</div>
						</div>
					))}
				</div>
			)))}
		</div>

		<div class="foot-div flex flex-1 flex-col justify-start items-center w-100% mt-12 mb-20">
			<img src="/illustration/treefull.jpg" class="foot-image mb-1 w-1/2 object-contain" style="max-height: 50vh">
			<h4 class="foot-text mw-1/4">Thanks for stopping by!</h4>
		</div>

		<Footer />
	</body>
</html>